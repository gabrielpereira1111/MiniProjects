// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using locadora_webApi.Context;

#nullable disable

namespace locadora_webApi.Migrations
{
    [DbContext(typeof(LocadoraContext))]
    partial class LocadoraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("locadora_webApi.Domains.Alugueis", b =>
                {
                    b.Property<int>("idAluguel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAluguel"), 1L, 1);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("Date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.HasKey("idAluguel");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVeiculo")
                        .IsUnique();

                    b.ToTable("Alugueis");

                    b.HasData(
                        new
                        {
                            idAluguel = 1,
                            DataFim = new DateTime(2022, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2022, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            IdVeiculo = 1
                        },
                        new
                        {
                            idAluguel = 2,
                            DataFim = new DateTime(2022, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInicio = new DateTime(2022, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            IdVeiculo = 3
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Clientes", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("Char(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idCliente");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("idUsuario")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            idCliente = 1,
                            Cpf = "00000000000",
                            Nome = "Administrador",
                            idUsuario = 1
                        },
                        new
                        {
                            idCliente = 2,
                            Cpf = "47612984835",
                            Nome = "Comum",
                            idUsuario = 2
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Empresas", b =>
                {
                    b.Property<int>("idEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEmpresa"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(150)");

                    b.HasKey("idEmpresa");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            idEmpresa = 1,
                            Nome = "Locadora de Carros"
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Marcas", b =>
                {
                    b.Property<int>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMarca"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.HasKey("idMarca");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            idMarca = 1,
                            Nome = "Chevrolet"
                        },
                        new
                        {
                            idMarca = 2,
                            Nome = "Fiat"
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Modelos", b =>
                {
                    b.Property<int>("idModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idModelo"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("Varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("idMarca")
                        .HasColumnType("int");

                    b.HasKey("idModelo");

                    b.HasIndex("idMarca");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            idModelo = 1,
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ac hendrerit velit. In ultrices non justo at accumsan. Etiam vitae augue posuere turpis condimentum cursus.",
                            Nome = "Argo",
                            idMarca = 2
                        },
                        new
                        {
                            idModelo = 2,
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ac hendrerit velit. In ultrices non justo at accumsan. Etiam vitae augue posuere turpis condimentum cursus.",
                            Nome = "Cronos",
                            idMarca = 2
                        },
                        new
                        {
                            idModelo = 3,
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ac hendrerit velit. In ultrices non justo at accumsan. Etiam vitae augue posuere turpis condimentum cursus.",
                            Nome = "Camaro",
                            idMarca = 1
                        },
                        new
                        {
                            idModelo = 4,
                            Descricao = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ac hendrerit velit. In ultrices non justo at accumsan. Etiam vitae augue posuere turpis condimentum cursus.",
                            Nome = "Cruzer",
                            idMarca = 1
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.TiposUsuario", b =>
                {
                    b.Property<int>("idTiposUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTiposUsuario"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.HasKey("idTiposUsuario");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            idTiposUsuario = 1,
                            Nome = "Administrador"
                        },
                        new
                        {
                            idTiposUsuario = 2,
                            Nome = "Comum"
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.Property<int>("IdTiposUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.HasKey("idUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdTiposUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            idUsuario = 1,
                            Email = "admin@email.com",
                            IdTiposUsuario = 1,
                            Senha = "1234"
                        },
                        new
                        {
                            idUsuario = 2,
                            Email = "comum@email.com",
                            IdTiposUsuario = 2,
                            Senha = "1234"
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Veiculos", b =>
                {
                    b.Property<int>("idVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVeiculo"), 1L, 1);

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("Char(7)");

                    b.Property<int>("idEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.HasKey("idVeiculo");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("idEmpresa");

                    b.HasIndex("idModelo");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            idVeiculo = 1,
                            Placa = "5679203",
                            idEmpresa = 1,
                            idModelo = 1
                        },
                        new
                        {
                            idVeiculo = 2,
                            Placa = "6781314",
                            idEmpresa = 1,
                            idModelo = 2
                        },
                        new
                        {
                            idVeiculo = 3,
                            Placa = "6570103",
                            idEmpresa = 1,
                            idModelo = 2
                        },
                        new
                        {
                            idVeiculo = 4,
                            Placa = "7683029",
                            idEmpresa = 1,
                            idModelo = 4
                        });
                });

            modelBuilder.Entity("locadora_webApi.Domains.Alugueis", b =>
                {
                    b.HasOne("locadora_webApi.Domains.Clientes", "Cliente")
                        .WithMany("Alugueis")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("locadora_webApi.Domains.Veiculos", "Veiculo")
                        .WithOne("Aluguel")
                        .HasForeignKey("locadora_webApi.Domains.Alugueis", "IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Clientes", b =>
                {
                    b.HasOne("locadora_webApi.Domains.Usuarios", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("locadora_webApi.Domains.Clientes", "idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Modelos", b =>
                {
                    b.HasOne("locadora_webApi.Domains.Marcas", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("idMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Usuarios", b =>
                {
                    b.HasOne("locadora_webApi.Domains.TiposUsuario", "TiposUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTiposUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiposUsuario");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Veiculos", b =>
                {
                    b.HasOne("locadora_webApi.Domains.Empresas", "Empresa")
                        .WithMany("Veiculos")
                        .HasForeignKey("idEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("locadora_webApi.Domains.Modelos", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("idModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Clientes", b =>
                {
                    b.Navigation("Alugueis");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Empresas", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Marcas", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Modelos", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("locadora_webApi.Domains.TiposUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("locadora_webApi.Domains.Usuarios", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();
                });

            modelBuilder.Entity("locadora_webApi.Domains.Veiculos", b =>
                {
                    b.Navigation("Aluguel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
